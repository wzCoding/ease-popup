{"version":3,"file":"EasePopup.js","mappings":"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","sources":["webpack://EasePopup/webpack/bootstrap","webpack://EasePopup/webpack/runtime/define property getters","webpack://EasePopup/webpack/runtime/hasOwnProperty shorthand","webpack://EasePopup/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://EasePopup/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://EasePopup/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://EasePopup/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://EasePopup/./src/option.js","webpack://EasePopup/./src/resolve.js","webpack://EasePopup/./src/popup.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n","/**\r\n * popupOption对象，用于配置popup组件的选项。\r\n * @property {string} direction - popup显示的方向，默认值为 'top'，可取值为：'center','top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end','left', 'left-start', 'left-end', 'right', 'right-start', 'right-end'。\r\n * @property {string} width - popup的宽度设置，默认值为 'auto'，可取值为：一个数字值、一个字符串值、'auto'\r\n * @property {string} content - popup中要显示的内容，默认值为 'auto'\r\n * @property {string} placement - popup的放置部位（位于目标元素的外部或者内部），默认值为 'outside'，可取值为：'outside','inside'\r\n * @property {boolean} needArrow - 是否需要箭头，默认值为 true。\r\n * @property {boolean} singleOpen - 是否同时只打开一个popup，默认值为 true。\r\n * @property {boolean} contentClick - 是否可以点击popup自身，默认值为 true。\r\n * @property {boolean} closeByOutSide - 是否在点击popup以外的区域时关闭popup，默认值为 true。\r\n * @property {boolean} fullScreen - 遮罩层是否全屏，默认值为 false，这个属性只在showModal时生效。\r\n * @property {boolean} container - target所在的容器，默认值为 body，可取值为一个选择器字符串或者一个dom元素。\r\n * @property {number} targetGap - popup与目标元素（触发元素）的间距。\r\n * @property {number[]} boundryGap - popup与body边缘的间距，取值为 [x,y]，表示上下、左右距离边缘的间距，默认为 [10,10]。\r\n * @property {(object|string)} theme - popup的主题，默认值为'light'，可取值为'light'，'dark'，自定义的theme对象{background:'',color:''}。\r\n */\r\n\r\nconst popupOption = {\r\n\r\n    //方向\r\n    direction: 'bottom',\r\n\r\n    //popup宽度设置\r\n    width: 'auto',\r\n\r\n    //popup中要显示的内容\r\n    content: '',\r\n\r\n    //popup的放置部位（位于目标元素的外部或者内部）\r\n    placement: 'outside',\r\n\r\n    //是否需要小箭头   \r\n    needArrow: true,\r\n\r\n    //是否同时只打开一个popup\r\n    singleOpen: true,\r\n\r\n    //是否可以点击popup自身\r\n    selfClick: true,\r\n\r\n    //是否在点击popup以外的区域时关闭popup\r\n    closeByOutSide: true,\r\n\r\n    //是否全屏\r\n    fullScreen: false,\r\n\r\n    //target所在的容器\r\n    container: 'body',\r\n\r\n    //popup与目标元素（触发元素）的间距\r\n    targetGap: 15,\r\n\r\n    //popup与body边缘的间距\r\n    boundryGap: 5,\r\n\r\n    //popup的偏移量\r\n    offset: [0, 0],\r\n\r\n    //popup的主题（文字颜色与背景色）\r\n    theme: 'light',\r\n\r\n}\r\n//popup的默认样式\r\nconst popupStyle = {\r\n    popup: [\r\n        \".ease-popup\",\r\n        [\"display\", \"none\"],\r\n        [\"position\", \"absolute\"],\r\n        [\"box-sizing\", \"border-box\"],\r\n        [\"padding\", \"8px\"],\r\n        [\"box-shadow\", \"0px 0px 6px rgba(0, 0, 0, 0.2)\"],\r\n        [\"border-radius\", \"4px\"],\r\n        [\"border\", \"none\"],\r\n        [\"outline\", \"none\"],\r\n        [\"margin\", \"0\"],\r\n        [\"width\", \"max-content\"]\r\n    ],\r\n    arrow: [\r\n        \".ease-popup .ease-popup-arrow\",\r\n        [\"display\", \"block\"],\r\n        [\"position\", \"absolute\"],\r\n        [\"width\", \"10px\"],\r\n        [\"height\", \"10px\"],\r\n        [\"background-color\", \" inherit\"],\r\n        [\"box-shadow\", \"-1px 1px 1px rgba(0, 0, 0, 0.1)\"]\r\n    ],\r\n    dialog: [\r\n        \"dialog[open]\",\r\n        [\"display\", \"block\", true],\r\n        [\"overflow\", \"initial\"]\r\n    ]\r\n}\r\n//popup的主题样式\r\nconst popupTheme = {\r\n    'light': { 'background': '#ffffff', 'color': '#333333' },\r\n    'dark': { 'background': '#333333', 'color': '#ffffff' },\r\n}\r\n//arrow箭头的配置\r\nconst arrowOption = {\r\n    rotate: {\r\n        top: -45,\r\n        bottom: 135,\r\n        left: 225,\r\n        right: 45,\r\n    },\r\n    side: {\r\n        top: 'bottom',\r\n        right: 'left',\r\n        bottom: 'top',\r\n        left: 'right',\r\n    }\r\n}\r\n//popup的方向\r\nconst directions = {\r\n    outside: ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'right', 'right-start', 'right-end'],\r\n    inside: ['left', 'left-start', 'left-end', 'right', 'right-start', 'right-end', 'center', 'center-start', 'center-end']\r\n}\r\n\r\nexport {\r\n    directions,\r\n    popupStyle,\r\n    popupTheme,\r\n    popupOption,\r\n    arrowOption\r\n}","import { computePosition, size, offset, arrow, flip, shift, hide, detectOverflow } from '@floating-ui/dom'\r\nimport { popupOption, popupTheme, arrowOption } from \"./option\"\r\n\r\nconst preventOverflow = (options) => ({\r\n    name: \"preventOverflow\",\r\n    async fn(state) {\r\n        const overflow = await detectOverflow(state, options);\r\n        return {\r\n            data: overflow\r\n        }\r\n    },\r\n})\r\n\r\nfunction apply(state) {\r\n    Object.assign(state.elements.floating.style, {\r\n        maxWidth: `${state.availableWidth}px`,\r\n        maxHeight: `${state.availableHeight}px`\r\n    })\r\n}\r\nfunction updatePosition() {\r\n    const positionOptions = getPositionOptions(this.popup, this.options)\r\n    computePosition(\r\n        this.target,\r\n        this.popup,\r\n        positionOptions\r\n    ).then((res) => {\r\n        console.log(res)\r\n        this.options.direction = res.placement\r\n        updateStyles.call(this, res)\r\n    });\r\n}\r\n\r\nfunction updateStyles(data) {\r\n    const zIndex = getzIndex() + 2\r\n    const { popup, options } = this\r\n    const { x, y, placement, middlewareData } = data\r\n    const popupStyles = {\r\n        'left': `${x}px`,\r\n        'top': `${y}px`,\r\n        'z-index': `${zIndex}`,\r\n        'background-color': `${options.theme.background}`,\r\n        'color': `${options.theme.color}`,\r\n    }\r\n    Object.assign(popup.style, popupStyles)\r\n    // 更新箭头样式\r\n    if (options.needArrow) {\r\n        const arrow = resolveArrow(popup)\r\n        const { x, y } = middlewareData.arrow\r\n        const side = placement.split('-')[0]\r\n        const staticSide = arrowOption.side[side];\r\n        const rotate = arrowOption.rotate[side];\r\n        const arrowStyles = {\r\n            'left': x != null ? `${x}px` : '',\r\n            'top': y != null ? `${y}px` : '',\r\n            'z-index': `${zIndex - 1}`,\r\n            'transform': `rotate(${rotate}deg)`,\r\n            [staticSide]: '-5px'\r\n        }\r\n        Object.assign(arrow.style, arrowStyles)\r\n    }\r\n    if (middlewareData.hide.referenceHidden) {\r\n        popup.style.visibility = 'hidden'\r\n    } else {\r\n        popup.style.visibility = 'visible'\r\n    }\r\n}\r\n\r\nfunction getzIndex() {\r\n    const result = [...document.querySelectorAll('*')].map(\r\n        el => getComputedStyle(el).zIndex !== 'auto'\r\n    )\r\n    return result.length > 0 ? Math.max(...result) + 1 : 0\r\n}\r\nfunction insideOffset(options) {\r\n    const { direction, width, offset } = options\r\n    return ({ rects }) => {\r\n        const result = { mainAxis: 0, crossAxis: 0 }\r\n        const [x = 0, y = 0] = offset\r\n        if (direction.includes('center')) {\r\n            result.mainAxis = rects.reference.width / 2 - rects.floating.width / 2 + x\r\n            result.crossAxis = rects.reference.height / 2 - rects.floating.height / 2 + y\r\n        }\r\n        if (direction.includes('left') || direction.includes('right')) {\r\n            result.mainAxis = -(width + x)\r\n            result.crossAxis = 0 + y\r\n        }\r\n        return result\r\n    }\r\n}\r\nfunction getPositionOptions(popup, options) {\r\n    const overflowOptions = {\r\n        boundary: resolveEl(options.container),\r\n        padding: options.boundryGap\r\n    }\r\n    const offsetOptions = options.placement === 'inside' ? insideOffset(options) : options.targetGap\r\n    const result = {\r\n        placement: options.direction,\r\n        middleware: [\r\n            offset(offsetOptions), //设置popup平移距离\r\n            flip(overflowOptions),  //设置popup自动调整方向\r\n            shift(overflowOptions),  //设置popup不超出容器\r\n            preventOverflow(overflowOptions), //设置popup防止溢出\r\n            size({ ...overflowOptions, apply }), //设置popup尺寸\r\n            hide(overflowOptions) //设置popup隐藏\r\n        ]\r\n    }\r\n    if (options.needArrow) {\r\n        result.middleware.push(arrow({ element: resolveArrow(popup) }))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction resolveEl(el) {\r\n    let result\r\n    if (resolveType(el) === \"string\") {\r\n        result = document.getElementById(el) || document.getElementsByClassName(el)[0] || document.querySelector(el)\r\n    }\r\n    if (resolveType(el).includes(\"element\")) result = el\r\n    return result\r\n}\r\n\r\nfunction resolveType(value) {\r\n    return Object.prototype.toString.call(value).replace('object ', \"\").match(/\\w+/g)[0].toLowerCase();\r\n}\r\n\r\nfunction resolveParam(params) {\r\n    let args = [...params]\r\n    let target, popup, options\r\n    if (!args.length) {\r\n        throw new Error('at least \"target\" parameter is required')\r\n    }\r\n    target = resolveEl(args[0])\r\n    if (!target) {\r\n        throw new Error('target parameter is invalid')\r\n    }\r\n    if (args.length === 1) {\r\n        options = resolveOption({})\r\n        popup = resolvePopup(popup, options)\r\n    }\r\n\r\n    if (args.length >= 2) {\r\n        const i = args[2] ? 2 : 1\r\n        options = resolveOption(resolveType(args[i]) === 'object' ? args[i] : {})\r\n        popup = resolvePopup(args[1], options)\r\n    }\r\n\r\n    if (options && target === document.body) {\r\n        options.container = document.body\r\n        options.placement = 'inside'\r\n        options.needArrow = false\r\n    }\r\n\r\n    return { target, popup, options }\r\n}\r\nfunction resolveArrow(popup) {\r\n    const className = 'ease-popup-arrow'\r\n    let arrow = popup.querySelector(`.${className}`)\r\n    if (!arrow) {\r\n        arrow = document.createElement('div')\r\n        arrow.classList.add(className)\r\n        popup.appendChild(arrow)\r\n    }\r\n    return arrow\r\n}\r\nfunction resolveModal(container, show, fullScreen) {\r\n    const className = 'ease-popup-modal'\r\n    let modal = document.querySelector(`.${className}`)\r\n    container = resolveEl(container)\r\n    if (!modal && container) {\r\n        const zIndex = getzIndex() + 1\r\n        modal = document.createElement('div')\r\n        modal.className = className\r\n        modal.style.zIndex = zIndex\r\n        modal.style.position = 'fixed'\r\n        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.1)'\r\n        if (!fullScreen) {\r\n            const { x, y, width, height } = container.getBoundingClientRect()\r\n            modal.style.left = `${x}px`\r\n            modal.style.top = `${y}px`\r\n            modal.style.width = `${width}px`\r\n            modal.style.height = `${height}px`\r\n        } else {\r\n            modal.style.inset = '0'\r\n        }\r\n        document.body.appendChild(modal)\r\n    }\r\n    if (modal) {\r\n        modal.style.display = show ? 'block' : 'none'\r\n    }\r\n}\r\nfunction resolvePopup(popup, options) {\r\n    popup = resolveEl(popup)\r\n    if (!popup) {\r\n        popup = document.createElement('dialog')\r\n        const container = resolveEl(options.container)\r\n        if (!popup.show && resolveType(popup.show) !== 'function') {\r\n            popup = document.createElement('div')\r\n        }\r\n        container.appendChild(popup)\r\n    }\r\n    if (!popup.show && resolveType(popup.show) !== 'function') {\r\n        const configs = {\r\n            open: {\r\n                value: false,\r\n                writable: true,\r\n                configurable: false,\r\n            },\r\n            show: {\r\n                value: function () {\r\n                    this.open = true\r\n                    this.style.display = 'block'\r\n                },\r\n                writable: false,\r\n                configurable: false,\r\n            },\r\n            showModal: {\r\n                value: function (container, fullScreen) {\r\n                    resolveModal(container, true, fullScreen)\r\n                },\r\n                writable: false,\r\n                configurable: false,\r\n            },\r\n            close: {\r\n                value: function () {\r\n                    this.open = false\r\n                    this.style.display = 'none'\r\n                },\r\n                writable: false,\r\n                configurable: false,\r\n            }\r\n        }\r\n        Object.defineProperties(popup, configs)\r\n    }\r\n    popup.className += ` ease-popup ease-popup-${document.querySelectorAll('.ease-popup').length}`\r\n    if (options.content) popup.innerHTML = `<div class='ease-popup-content'>${options.content}</div>`\r\n    if (options.width) popup.style.width = `${options.width}px`\r\n    return popup\r\n}\r\n\r\nfunction resolveOption(options) {\r\n    const resolved = Object.assign({}, popupOption, options)\r\n    if (!resolved.needArrow) {\r\n        resolved.arrowSize = 0\r\n    }\r\n\r\n    if (resolved.theme) {\r\n        if (popupTheme[resolved.theme]) {\r\n            resolved.theme = popupTheme[resolved.theme]\r\n        }\r\n    }\r\n\r\n    return resolved\r\n}\r\nfunction resolveEvent(event) {\r\n    if (!this.target.contains(event.target) || this.target === document.body) {\r\n        //通过点击坐标判断是否是在popup元素自身或是外部，更兼容一些\r\n        const { x, y, width, height } = this.popup.getBoundingClientRect()\r\n        const endX = x + width\r\n        const endY = y + height\r\n        if (this.options.closeByOutSide) {\r\n            if (event.clientX > endX || event.clientX < x || event.clientY > endY || event.clientY < y) {\r\n                this.hide()\r\n            }\r\n        }\r\n        if (!this.options.selfClick) {\r\n            if (event.clientX > x && event.clientX < endX && event.clientY > y && event.clientY < endY) {\r\n                this.hide()\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//I found this function on MDN and made some modifications \r\n//to support adding styles using a single <style> tag\r\nfunction addStylesheetRules(rules, id) {\r\n    let sheet\r\n    if (document.getElementById(id)) {\r\n        sheet = document.getElementById(id).sheet\r\n    } else {\r\n        const style = document.createElement(\"style\")\r\n        style.id = id\r\n        style.type = \"text/css\"\r\n        document.getElementsByTagName(\"head\")[0].appendChild(style)\r\n\r\n        if (!window.createPopup) {\r\n            style.appendChild(document.createTextNode(\"\"))\r\n        }\r\n        sheet = document.styleSheets[document.styleSheets.length - 1]\r\n    }\r\n    for (let index = 0; index < rules.length; index++) {\r\n        let rule = rules[index]\r\n        let selector = rule[0]\r\n        let existRule = [...sheet.rules].filter(item => item.selectorText === selector)\r\n        if (existRule.length) {\r\n            break;\r\n        }\r\n\r\n        let subIndex = 1\r\n        let ruleText = \"\"\r\n\r\n        if (Object.prototype.toString.call(rule[1][0]) === \"[object Array]\") {\r\n            rule = rule[1]\r\n            subIndex = 0\r\n        }\r\n\r\n        for (; subIndex < rule.length; subIndex++) {\r\n            let subRule = rule[subIndex]\r\n            ruleText += `${subRule[0]}:${subRule[1]}${subRule[2] ? \" !important\" : \"\"};\\n`\r\n        }\r\n\r\n        if (sheet.insertRule) {\r\n            sheet.insertRule(selector + \"{\" + ruleText + \"}\", sheet.cssRules.length);\r\n        } else {\r\n            sheet.addRule(selector, ruleText, -1);\r\n        }\r\n    }\r\n\r\n}\r\nexport {\r\n    preventOverflow,\r\n    apply,\r\n    updatePosition,\r\n    getzIndex,\r\n    getPositionOptions,\r\n    resolveParam,\r\n    resolveOption,\r\n    resolveEvent,\r\n    resolveModal,\r\n    addStylesheetRules,\r\n}","import { autoUpdate } from '@floating-ui/dom'\r\nimport { popupStyle } from \"./option\"\r\nimport {\r\n    resolveParam,\r\n    resolveEvent,\r\n    resolveModal,\r\n    updatePosition,\r\n    addStylesheetRules,\r\n} from \"./resolve\"\r\n\r\n\r\nclass Popup {\r\n    constructor(target, popup, options = {}) {\r\n\r\n        const resolved = resolveParam(arguments)\r\n        this.target = resolved.target\r\n        this.popup = resolved.popup\r\n        this.options = resolved.options\r\n\r\n        this.popup.classList.add('ease-popup')\r\n\r\n        for (const key in popupStyle) {\r\n            addStylesheetRules([popupStyle[key]], 'ease-popup')\r\n        }\r\n\r\n        this.cleanup = this.update()\r\n        this.handleEvent = resolveEvent.bind(this)\r\n    }\r\n    update() {\r\n        const callback = updatePosition.bind(this)\r\n        return autoUpdate(this.target, this.popup, callback)\r\n    }\r\n    show(isDialog) {\r\n        if (!isDialog) this.popup.show()\r\n        if (this.options.singleOpen) {\r\n            const others = [...document.getElementsByClassName('ease-popup')].filter(item => item !== this.popup)\r\n            others.length && others.forEach(item => item.close && item.close())\r\n        }\r\n\r\n        document.addEventListener('click', this.handleEvent, true)\r\n    }\r\n    showModal() {\r\n        const isDialog = this.popup.nodeName == 'DIALOG'\r\n        if (!this.options.fullScreen) {\r\n            if (isDialog) {\r\n                this.popup.show()\r\n                resolveModal(this.options.container, true, this.options.fullScreen)\r\n            } else {\r\n                this.popup.showModal(this.options.container)\r\n            }\r\n        } else {\r\n            this.popup.showModal(document.body, this.options.fullScreen)\r\n        }\r\n        this.show(isDialog)\r\n\r\n    }\r\n    hide() {\r\n        this.popup.close()\r\n        resolveModal()\r\n        document.removeEventListener('click', this.handleEvent, true)\r\n    }\r\n    destroy() {\r\n        this.hide()\r\n        this.cleanup()\r\n        this.popup.remove()\r\n        document.removeEventListener('click', this.handleEvent, true)\r\n        for (let prop in this) {\r\n            this[prop] = null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Popup"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","sides","Math","min","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","param","placement","split","axis","getAxisLength","includes","getAlignmentAxis","replace","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","isRTL","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","data","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","concat","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","e","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","getClientRects","Array","from","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","push","isStart","lr","rl","tb","bt","getSideList","map","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","length","mainAlignmentSide","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","reset","resetPlacement","d","sort","a","b","_overflowsData$map$so","acc","apply","isYAxis","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","popupOption","content","needArrow","singleOpen","selfClick","closeByOutSide","fullScreen","container","targetGap","boundryGap","theme","popupStyle","popup","dialog","popupTheme","arrowOption","rotate","preventOverflow","assign","style","maxWidth","maxHeight","updatePosition","positionOptions","overflowOptions","resolveEl","offsetOptions","insideOffset","middleware","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","resolveArrow","getPositionOptions","Map","mergedOptions","platformWithCache","config","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition","target","then","res","console","log","updateStyles","zIndex","getzIndex","popupStyles","background","color","staticSide","arrowStyles","hide","visibility","querySelectorAll","resolveType","getElementById","getElementsByClassName","querySelector","toString","match","className","createElement","classList","add","appendChild","resolveModal","show","modal","backgroundColor","inset","resolvePopup","configs","open","writable","configurable","showModal","close","defineProperties","innerHTML","resolveOption","resolved","arrowSize","resolveEvent","event","contains","endX","endY","clientX","clientY","addStylesheetRules","rules","id","sheet","type","getElementsByTagName","createPopup","createTextNode","styleSheets","rule","item","selectorText","subIndex","ruleText","subRule","insertRule","cssRules","addRule","constructor","params","args","Error","resolveParam","arguments","cleanup","update","handleEvent","bind","callback","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","autoUpdate","isDialog","others","destroy","remove"],"sourceRoot":""}