{"version":3,"file":"EasePopup.js","mappings":"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","sources":["webpack://EasePopup/webpack/bootstrap","webpack://EasePopup/webpack/runtime/define property getters","webpack://EasePopup/webpack/runtime/hasOwnProperty shorthand","webpack://EasePopup/./src/option.js","webpack://EasePopup/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://EasePopup/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://EasePopup/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://EasePopup/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://EasePopup/./src/resolve.js","webpack://EasePopup/./src/popup.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * popupOption对象，用于配置popup组件的选项。\r\n * @property {string} direction - popup显示的方向，默认值为 'top'，可取值为：'center','top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end','left', 'left-start', 'left-end', 'right', 'right-start', 'right-end'。\r\n * @property {string} width - popup的宽度设置，默认值为 'auto'，可取值为：一个数字值、一个字符串值、'auto'\r\n * @property {string} content - popup中要显示的内容，默认值为 'auto'\r\n * @property {string} placement - popup的放置部位（位于目标元素的外部或者内部），默认值为 'outside'，可取值为：'outside','inside'\r\n * @property {boolean} useCache - 是否使用样式缓存（使用缓存可以减少样式计算，提升性能），默认值为 false。\r\n * @property {boolean} needArrow - 是否需要箭头，默认值为 true。\r\n * @property {boolean} single - 是否同时只打开一个popup，默认值为 true。\r\n * @property {boolean} contentClick - 是否可以点击popup自身，默认值为 true。\r\n * @property {boolean} closeByOutSide - 是否在点击popup以外的区域时关闭popup，默认值为 true。\r\n * @property {boolean} container - target所在的容器，默认值为 body，可取值为一个选择器字符串或者一个dom元素。\r\n * @property {number} targetGap - popup与目标元素（触发元素）的间距。\r\n * @property {number[]} boundryGap - popup与body边缘的间距，取值为 [x,y]，表示上下、左右距离边缘的间距，默认为 [10,10]。\r\n * @property {(object|string)} theme - popup的主题，默认值为'light'，可取值为'light'，'dark'，自定义的theme对象{background:'',color:''}。\r\n */\r\n\r\nconst popupOption = {\r\n\r\n    //方向\r\n    direction: 'top',\r\n\r\n    //popup宽度设置\r\n    width: 'auto',\r\n\r\n    //popup中要显示的内容\r\n    content: '',\r\n\r\n    //popup的放置部位（位于目标元素的外部或者内部）\r\n    placement: 'outside',\r\n\r\n    //是否需要小箭头   \r\n    needArrow: true,\r\n\r\n    //是否同时只打开一个popup\r\n    single: true,\r\n\r\n    //是否可以点击popup自身\r\n    contentClick: true,\r\n\r\n    //是否在点击popup以外的区域时关闭popup\r\n    closeByOutSide: true,\r\n\r\n    //target所在的容器\r\n    container: 'body',\r\n\r\n    //popup与目标元素（触发元素）的间距\r\n    targetGap: 15,\r\n\r\n    //popup与body边缘的间距\r\n    boundryGap: 5,\r\n\r\n    //popup的主题（文字颜色与背景色）\r\n    theme: 'light',\r\n\r\n}\r\n//popup的默认样式\r\nconst popupStyle = {\r\n    popup: [\r\n        \".ease-popup\",\r\n        [\"display\", \"none\"],\r\n        [\"position\", \"absolute\"],\r\n        [\"box-sizing\", \"border-box\"],\r\n        [\"padding\", \"8px\"],\r\n        [\"box-shadow\", \"0px 0px 6px rgba(0, 0, 0, 0.2)\"],\r\n        [\"border-radius\", \"4px\"],\r\n        [\"border\", \"none\"],\r\n        [\"outline\", \"none\"],\r\n        [\"margin\", \"0\"],\r\n        [\"width\", \"max-content\"]\r\n    ],\r\n    arrow: [\r\n        \".ease-popup .ease-popup-arrow\",\r\n        [\"display\", \"block\"],\r\n        [\"position\", \"absolute\"],\r\n        [\"width\", \"10px\"],\r\n        [\"height\", \"10px\"],\r\n        [\"background-color\", \" inherit\"],\r\n        [\"box-shadow\", \"-1px 1px 1px rgba(0, 0, 0, 0.1)\"]\r\n    ],\r\n    dialog: [\r\n        \"dialog[open]\",\r\n        [\"display\", \"block\", true]\r\n    ]\r\n}\r\n//popup的主题样式\r\nconst popupTheme = {\r\n    'light': { 'background': '#ffffff', 'color': '#333333' },\r\n    'dark': { 'background': '#333333', 'color': '#ffffff' },\r\n}\r\nconst arrowOption = {\r\n    rotate: {\r\n        top: -45,\r\n        bottom: 135,\r\n        left: 225,\r\n        right: 45,\r\n    },\r\n    side: {\r\n        top: 'bottom',\r\n        right: 'left',\r\n        bottom: 'top',\r\n        left: 'right',\r\n    }\r\n}\r\n//方向\r\nconst directions = ['top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end', 'center', 'right', 'right-start', 'right-end']\r\n\r\nexport {\r\n    directions,\r\n    popupStyle,\r\n    popupTheme,\r\n    popupOption,\r\n    arrowOption\r\n}","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n","import { popupOption, popupTheme, arrowOption } from \"./option\"\r\nimport { size, offset, arrow, flip, shift, autoUpdate, detectOverflow } from '@floating-ui/dom';\r\nconst preventOverflow = (options) => ({\r\n    name: \"preventOverflow\",\r\n    async fn(state) {\r\n        const overflow = await detectOverflow(state, options);\r\n        return {\r\n            data: overflow\r\n        }\r\n    },\r\n})\r\n\r\nfunction apply(state) {\r\n    Object.assign(state.elements.floating.style, {\r\n        maxWidth: `${state.availableWidth}px`,\r\n        maxHeight: `${state.availableHeight}px`\r\n    })\r\n}\r\n\r\nfunction updateStyles(popup, options, data) {\r\n    const zIndex = getzIndex() + 2\r\n    const { x, y, placement, middlewareData } = data\r\n    const popupStyles = {\r\n        'left': `${x}px`,\r\n        'top': `${y}px`,\r\n        'z-index': `${zIndex}`,\r\n        'background-color': `${options.theme.background}`,\r\n        'color': `${options.theme.color}`,\r\n    }\r\n    Object.assign(popup.style, popupStyles)\r\n    // 更新箭头样式\r\n    if (options.needArrow) {\r\n        const arrow = resolveArrow(popup)\r\n        const { x, y } = middlewareData.arrow\r\n        const side = placement.split('-')[0]\r\n        const staticSide = arrowOption.side[side];\r\n        const rotate = arrowOption.rotate[side];\r\n        const arrowStyles = {\r\n            'left': x != null ? `${x}px` : '',\r\n            'top': y != null ? `${y}px` : '',\r\n            'z-index': `${zIndex - 1}`,\r\n            'transform': `rotate(${rotate}deg)`,\r\n            [staticSide]: '-5px'\r\n        }\r\n        Object.assign(arrow.style, arrowStyles)\r\n    }\r\n\r\n}\r\nfunction autoUpdateStyles(target, popup, options) {\r\n    const func = updatePosition.bind(null, target, popup, options)\r\n    const cleanup = autoUpdate(\r\n        target,\r\n        popup,\r\n        func,\r\n    );\r\n    return cleanup\r\n}\r\nfunction getzIndex() {\r\n    const result = [...document.querySelectorAll('*')].map(\r\n        el => getComputedStyle(el).zIndex !== 'auto'\r\n    )\r\n    return result.length > 0 ? Math.max(...result) + 1 : 0\r\n}\r\n\r\nfunction getPositionOptions(popup, options) {\r\n    const overflowOptions = {\r\n        boundary: resolveEl(options.container),\r\n        padding: 5,\r\n    }\r\n    const result = {\r\n        placement: options.direction,\r\n        middleware: [\r\n            offset(options.targetGap), //设置popup平移距离\r\n            flip(overflowOptions),  //设置popup自动调整方向\r\n            shift(overflowOptions),  //设置popup不超出容器\r\n            preventOverflow(overflowOptions), //设置popup防止溢出\r\n            size({ ...overflowOptions, apply }) //设置popup尺寸\r\n        ]\r\n    }\r\n    if (options.needArrow) {\r\n        result.middleware.push(arrow({ element: resolveArrow(popup) }))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction resolveType(value) {\r\n    return Object.prototype.toString.call(value).replace('object ', \"\").match(/\\w+/g)[0].toLowerCase();\r\n}\r\n\r\nfunction resolveEl(el) {\r\n    let result\r\n    if (resolveType(el) === \"string\") {\r\n        result = document.getElementById(el) || document.getElementsByClassName(el)[0] || document.querySelector(el)\r\n    }\r\n    if (resolveType(el).includes(\"element\")) result = el\r\n    return result\r\n}\r\nfunction resolveParam(params) {\r\n    let args = [...params]\r\n    let target, popup, options\r\n    if (!args.length) {\r\n        throw new Error('at least \"target\" parameter is required')\r\n    }\r\n    target = resolveTarget(args[0])\r\n    if (args.length === 1) {\r\n        options = resolveOption({})\r\n        popup = resolvePopup(popup, options)\r\n    }\r\n\r\n    if (args.length >= 2) {\r\n        const i = args[2] ? 2 : 1\r\n        options = resolveOption(resolveType(args[i]) === 'object' ? args[i] : {})\r\n        popup = resolvePopup(args[1], options)\r\n    }\r\n\r\n    return { target, popup, options }\r\n}\r\n\r\nfunction resolveTarget(target) {\r\n    target = resolveEl(target)\r\n    if (!target) {\r\n        throw new Error('target parameter is invalid')\r\n    }\r\n    return target\r\n}\r\n\r\nfunction resolveModal(container, show) {\r\n    const className = 'ease-popup-modal'\r\n    const zIndex = getzIndex() + 1\r\n    let modal = document.querySelector(`.${className}`)\r\n    if (!modal && container) {\r\n        modal = document.createElement('div')\r\n        modal.className = className\r\n        modal.style.backgroundColor = 'rgba(0,0,0,0.1)'\r\n        modal.style.zIndex = zIndex\r\n        modal.style.position = 'absolute'\r\n        modal.style.inset = '0'\r\n        container.appendChild(modal)\r\n    }\r\n    if (modal) {\r\n        modal.style.display = show ? 'block' : 'none'\r\n        modal.parentNode.style.overflow = show ? 'hidden' : 'auto'\r\n    }\r\n}\r\nfunction resolvePopup(popup, options) {\r\n    popup = resolveEl(popup)\r\n    if (!popup) {\r\n        popup = document.createElement('dialog')\r\n        if (!popup.show && resolveType(popup.show) !== 'function') {\r\n            popup = document.createElement('div')\r\n        }\r\n        document.body.appendChild(popup)\r\n    }\r\n    if (!popup.show && resolveType(popup.show) !== 'function') {\r\n        const configs = {\r\n            open: {\r\n                value: false,\r\n                writable: true,\r\n                configurable: false,\r\n            },\r\n            show: {\r\n                value: function () {\r\n                    this.open = true\r\n                    this.style.display = 'block'\r\n                },\r\n                writable: false,\r\n                configurable: false,\r\n            },\r\n            showModal: {\r\n                value: function (container) {\r\n                    resolveModal(resolveEl(container), true)\r\n                },\r\n                writable: false,\r\n                configurable: false,\r\n            },\r\n            close: {\r\n                value: function () {\r\n                    this.open = false\r\n                    this.style.display = 'none'\r\n                    resolveModal()\r\n                },\r\n                writable: false,\r\n                configurable: false,\r\n            }\r\n        }\r\n        Object.defineProperties(popup, configs)\r\n    }\r\n    const className = 'ease-popup'\r\n    popup.className += ` ${className} ${className}-${document.querySelectorAll(`.${className}`).length}`\r\n    if (options.content) popup.innerHTML = options.content\r\n\r\n    return popup\r\n}\r\n\r\nfunction resolveOption(options) {\r\n    const resolved = Object.assign({}, popupOption, options)\r\n    if (!resolved.needArrow) {\r\n        resolved.arrowSize = 0\r\n    }\r\n\r\n    if (resolved.theme) {\r\n        if (popupTheme[resolved.theme]) {\r\n            resolved.theme = popupTheme[resolved.theme]\r\n        }\r\n    }\r\n\r\n    return resolved\r\n}\r\nfunction resolveEvent(event) {\r\n    if (this.options.closeByOutSide && !this.popup.contains(event.target) && !this.target.contains(event.target)) {\r\n        this.hide()\r\n    }\r\n    if (!this.options.contentClick && !this.target.contains(event.target)) {\r\n        this.hide()\r\n    }\r\n}\r\nfunction resolveArrow(popup) {\r\n    const className = 'ease-popup-arrow'\r\n    let arrow = popup.querySelector(`.${className}`)\r\n    if (!arrow) {\r\n        arrow = document.createElement('div')\r\n        arrow.classList.add(className)\r\n        popup.classList.add('arrow')\r\n        popup.appendChild(arrow)\r\n    }\r\n    return arrow\r\n}\r\n//this function is from MDN,and I just made some changes to\r\n//support use one <style> tag to add styleRules \r\nfunction addStylesheetRules(rules, id) {\r\n    let sheet\r\n    if (document.getElementById(id)) {\r\n        sheet = document.getElementById(id).sheet\r\n    } else {\r\n        const style = document.createElement(\"style\")\r\n        style.id = id\r\n        style.type = \"text/css\"\r\n        document.getElementsByTagName(\"head\")[0].appendChild(style)\r\n\r\n        if (!window.createPopup) {\r\n            style.appendChild(document.createTextNode(\"\"))\r\n        }\r\n        sheet = document.styleSheets[document.styleSheets.length - 1]\r\n    }\r\n    for (let index = 0; index < rules.length; index++) {\r\n        let rule = rules[index]\r\n        let selector = rule[0]\r\n        let existRule = [...sheet.rules].filter(item => item.selectorText === selector)\r\n        if (existRule.length) {\r\n            break;\r\n        }\r\n\r\n        let subIndex = 1\r\n        let ruleText = \"\"\r\n\r\n        if (Object.prototype.toString.call(rule[1][0]) === \"[object Array]\") {\r\n            rule = rule[1]\r\n            subIndex = 0\r\n        }\r\n\r\n        for (; subIndex < rule.length; subIndex++) {\r\n            let subRule = rule[subIndex]\r\n            ruleText += `${subRule[0]}:${subRule[1]}${subRule[2] ? \" !important\" : \"\"};\\n`\r\n        }\r\n\r\n        if (sheet.insertRule) {\r\n            sheet.insertRule(selector + \"{\" + ruleText + \"}\", sheet.cssRules.length);\r\n        } else {\r\n            sheet.addRule(selector, ruleText, -1);\r\n        }\r\n    }\r\n\r\n}\r\nexport {\r\n    preventOverflow,\r\n    apply,\r\n    updateStyles,\r\n    autoUpdateStyles,\r\n    getzIndex,\r\n    getPositionOptions,\r\n    resolveParam,\r\n    resolveOption,\r\n    resolveEvent,\r\n    addStylesheetRules,\r\n}","import { popupStyle } from \"./option\"\r\nimport {\r\n    resolveParam,\r\n    resolveEvent,\r\n    addStylesheetRules,\r\n    updateStyles,\r\n    getPositionOptions\r\n} from \"./resolve\"\r\nimport { computePosition } from '@floating-ui/dom';\r\n\r\nclass Popup {\r\n    constructor(target, popup, options = {}) {\r\n\r\n        const resolved = resolveParam(arguments)\r\n        this.target = resolved.target\r\n        this.popup = resolved.popup\r\n        this.options = resolved.options\r\n\r\n        this.popup.classList.add('ease-popup')\r\n\r\n        addStylesheetRules([popupStyle.popup], 'ease-popup')\r\n        addStylesheetRules([popupStyle.dialog], 'ease-popup')\r\n        addStylesheetRules([popupStyle.arrow], 'ease-popup')\r\n    }\r\n    update() {\r\n        const positionOptions = getPositionOptions(this.popup, this.options)\r\n        computePosition(\r\n            this.target,\r\n            this.popup,\r\n            positionOptions\r\n        ).then((res) => {\r\n            console.log(res)\r\n            this.options.direction = res.placement\r\n            updateStyles(this.popup, this.options, res)\r\n        });\r\n    }\r\n    show(isDialog) {\r\n        this.update()\r\n        if (!isDialog) this.popup.show()\r\n        if (this.options.single) {\r\n            const others = [...document.getElementsByClassName('ease-popup')].filter(item => item !== this.popup)\r\n            others.forEach(item => item.close())\r\n        }\r\n\r\n        this.clickOutSide = resolveEvent.bind(this)\r\n        document.addEventListener('click', this.clickOutSide, true)\r\n    }\r\n    showModal() {\r\n        this.popup.showModal(this.options.container)\r\n        this.show(this.popup.nodeName == 'DIALOG')\r\n    }\r\n    hide() {\r\n        this.popup.close()\r\n        if (this.clickOutSide) {\r\n            document.removeEventListener('click', this.clickOutSide, true)\r\n            this.clickOutSide = null\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Popup"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","popupOption","direction","width","content","placement","needArrow","single","contentClick","closeByOutSide","container","targetGap","boundryGap","theme","popupStyle","popup","arrow","dialog","popupTheme","arrowOption","rotate","top","bottom","left","right","side","Math","min","max","round","createCoords","floor","v","x","y","oppositeSideMap","oppositeAlignmentMap","start","end","clamp","value","param","split","axis","getAxisLength","includes","getAlignmentAxis","replace","alignment","getOppositePlacement","padding","expandPaddingObject","rect","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","isRTL","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","alignmentOffset","data","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","test","isTableElement","isContainingBlock","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","some","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","concat","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","e","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","getTrueOffsetParent","polyfill","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","getClientRects","Array","from","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","push","isStart","lr","rl","tb","bt","getSideList","map","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","sides","length","mainAlignmentSide","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","reset","resetPlacement","d","sort","a","b","_overflowsData$map$so","acc","apply","isYAxis","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","preventOverflow","assign","style","maxWidth","maxHeight","getzIndex","querySelectorAll","zIndex","resolveType","toString","match","resolveEl","getElementById","getElementsByClassName","querySelector","resolveModal","show","className","modal","createElement","backgroundColor","inset","appendChild","resolvePopup","configs","open","writable","configurable","showModal","close","defineProperties","innerHTML","resolveOption","resolved","arrowSize","resolveEvent","event","contains","target","hide","resolveArrow","classList","add","addStylesheetRules","rules","id","sheet","type","getElementsByTagName","createPopup","createTextNode","styleSheets","rule","item","selectorText","subIndex","ruleText","subRule","insertRule","cssRules","addRule","constructor","params","args","Error","resolveTarget","i","resolveParam","arguments","update","positionOptions","overflowOptions","middleware","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","getPositionOptions","Map","mergedOptions","platformWithCache","config","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","then","res","console","log","popupStyles","background","color","staticSide","arrowStyles","updateStyles","isDialog","forEach","clickOutSide","bind","addEventListener","removeEventListener"],"sourceRoot":""}