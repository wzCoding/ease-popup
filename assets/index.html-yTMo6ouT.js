import{_ as p,r as l,o as r,c as h,a as e,b as n,d as o,w as a,e as c}from"./app-Bxoc6ffn.js";const u={},g=e("h1",{id:"介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#介绍"},[e("span",null,"介绍")])],-1),f={href:"https://floating-ui.com/",target:"_blank",rel:"noopener noreferrer"},m=c('<div class="custom-container tip"><p class="custom-container-title">TIP</p><ul><li>弹窗元素使用 html5 <code>dialog</code> 元素生成，也支持使用 <code>div</code> 元素，兼容性较好。</li><li>弹窗只提供基础功能与基础样式，无需引入额外的 CSS 文件，想要其他样式可以自行定义编写。</li></ul></div><h1 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h1><p>插件支持两种安装方式：<strong>npm</strong> 包安装和 <strong>cdn</strong> 引入。</p><h3 id="npm" tabindex="-1"><a class="header-anchor" href="#npm"><span>npm</span></a></h3><p>推荐使用 npm包 的方式进行安装</p>',5),k=e("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"npm"),n(),e("span",{class:"token function"},"install"),n(` ease-popup
`)])])],-1),b=e("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"yarn"),n(),e("span",{class:"token function"},"install"),n(` ease-popup
`)])])],-1),v=e("div",{class:"language-bash","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"pnpm"),n(),e("span",{class:"token function"},"install"),n(` ease-popup
`)])])],-1),x=c(`<h3 id="cdn" tabindex="-1"><a class="header-anchor" href="#cdn"><span>cdn</span></a></h3><p>或者也可以使用 <code>&lt;script&gt;</code> 标签引入 cdn 链接</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">&quot;https://cdn.jsdelivr.net/gh/wzCoding/ease-popup@v1.0.1/dist/EasePopup.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span>
</code></pre></div><h1 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h1><p>当插件被引入到项目中后，就可以在项目中使用 <code>EasePopup</code> 类来创建弹窗了。</p><h3 id="创建实例" tabindex="-1"><a class="header-anchor" href="#创建实例"><span>创建实例</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> EasePopup <span class="token keyword">from</span> <span class="token string">&#39;ease-popup&#39;</span>
<span class="token comment">//或者</span>
<span class="token keyword">const</span> EasePopup <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ease-popup&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EasePopup</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建弹窗实例后，可以通过弹窗实例中提供的方法来控制弹窗：</p><ul><li><code>instance.update()</code> 更新弹窗配置选项</li><li><code>instance.show()</code> 显示弹窗</li><li><code>instance.showModal()</code> 显示弹窗并显示 layer 层</li><li><code>instance.hide()</code> 隐藏弹窗（隐藏 layer 层）</li><li><code>instance.destroy()</code> 销毁弹窗实例</li></ul><h3 id="示例演示" tabindex="-1"><a class="header-anchor" href="#示例演示"><span>示例演示</span></a></h3>`,11),_=c('<p>以上介绍是弹窗插件的基本用法，如果想要更加灵活的控制弹窗插件，需要配合 <code>options</code> 选项一起使用。</p><h1 id="配置选项" tabindex="-1"><a class="header-anchor" href="#配置选项"><span>配置选项</span></a></h1><p>使用 <code>options</code> 配置选项可以更加灵活的控制弹窗插件，比如：将弹窗设置在目标元素上方作为 tooltip 提示使用，或者将弹窗设置在目标元素内部作为 message 消息使用。</p><p>下面开始介绍 <code>options</code> 配置项：</p><h3 id="target" tabindex="-1"><a class="header-anchor" href="#target"><span>target</span></a></h3><ul><li><p>类型：<code>String | Object</code></p></li><li><p>默认值：<code>null</code></p></li><li><p>说明：设置弹窗的触发元素，可以是页面上的 <code>dom</code> 元素，也可以是一个有效的选择器。</p></li></ul><h3 id="popup" tabindex="-1"><a class="header-anchor" href="#popup"><span>popup</span></a></h3><ul><li><p>类型：<code>String | Object</code></p></li><li><p>默认值：<code>null</code></p></li><li><p>说明：设置弹窗元素，可以是页面上的 <code>dom</code> 元素，比如 <code>&lt;dialog&gt;</code>、<code>&lt;div&gt;</code> 等，也可以是一个有效的选择器。</p></li></ul><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container</span></a></h3><ul><li><p>类型：<code>String | Object</code></p></li><li><p>默认值：<code>document.body</code></p></li><li><p>说明：设置弹窗的容器元素，，可以是页面上的 <code>dom</code> 元素，也可以是一个有效的选择器，按照以下规则取值：</p><ul><li><p>当 <code>placement</code> 选项的值为 <strong>outside</strong> 时，设置 <code>container</code> 属性可以限制弹窗边界，防止弹窗溢出容器之外，默认值是 <code>body</code>。</p></li><li><p>当 <code>placement</code> 选项的值为 <strong>inside</strong> 时，这个选项是可选的，此时会将 <code>target</code> 视作 <code>container</code>。</p></li></ul></li></ul><h3 id="direction" tabindex="-1"><a class="header-anchor" href="#direction"><span>direction</span></a></h3><ul><li><p>类型：<code>String</code></p></li><li><p>默认值：<code>&#39;bottom&#39;</code></p></li><li><p>说明：设置弹窗的显示位置，按照以下规则取值：</p><ul><li><p>当 <code>placement</code> 选项的值为 <strong>outside</strong> 时，可取值有：<code>&#39;top&#39;</code>、<code>&#39;top-start&#39;</code>、<code>&#39;top-end&#39;</code>、<code>&#39;bottom&#39;</code>、<code>&#39;bottom-start&#39;</code>、<code>&#39;bottom-end&#39;</code>、<code>&#39;left&#39;</code>、<code>&#39;left-start&#39;</code>、<code>&#39;left-end&#39;</code>、<code>&#39;right&#39;</code>、<code>&#39;right-start&#39;</code>、<code>&#39;right-end&#39;</code>。</p></li><li><p>当 <code>placement</code> 选项的值为 <strong>inside</strong> 时，可取值有：<code>&#39;left&#39;</code>、<code>&#39;left-start&#39;</code>、<code>&#39;left-end&#39;</code>、<code>&#39;right&#39;</code>、<code>&#39;right-start&#39;</code>、<code>&#39;right-end&#39;</code>、<code>&#39;center&#39;</code>、<code>&#39;center-start&#39;</code>、<code>&#39;center-end&#39;</code>。</p></li></ul></li></ul><h3 id="placement" tabindex="-1"><a class="header-anchor" href="#placement"><span>placement</span></a></h3><ul><li><p>类型：<code>String</code></p></li><li><p>默认值：<code>&#39;outside&#39;</code></p></li><li><p>说明：设置弹窗在目标元素的内部或外部，按照以下规则取值：</p><ul><li><p>当想要将弹窗的位置显示在触发元素（目标元素）外部时，可以将此选项的值设置为 <strong>outside</strong>。</p></li><li><p>当想要将弹窗的位置显示在触发元素（容器元素）内部时，可以将此选项的值设置为 <strong>inside</strong>。</p></li></ul></li></ul><h3 id="width" tabindex="-1"><a class="header-anchor" href="#width"><span>width</span></a></h3><ul><li><p>类型：<code>Number | String</code></p></li><li><p>默认值：<code>&#39;auto&#39;</code></p></li><li><p>说明：设置弹窗的宽度。</p></li></ul><h3 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>content</span></a></h3><ul><li><p>类型：<code>String</code></p></li><li><p>默认值：<code>&#39; &#39;</code></p></li><li><p>说明：设置弹窗的内容，可以是 <code>String</code> 类型的文本，也可以是一段安全的 <code>html</code> 字符内容，这个选项当在页面上没有作为 <code>popup</code> 的元素存在，由插件自动创建 <code>popup</code> 时会很有用。</p></li></ul><h3 id="theme" tabindex="-1"><a class="header-anchor" href="#theme"><span>theme</span></a></h3><ul><li><p>类型：<code>String | Object</code></p></li><li><p>默认值：<code>&#39;light&#39;</code></p></li><li><p>说明：设置弹窗的主题，插件默认提供了 <strong>light</strong> 与 <strong>dark</strong> 两种主题，也可以传入自定义的主题颜色配置，格式为：<code>{ background:&#39;xxx&#39;, color:&#39;xxx&#39; }</code></p></li></ul><h3 id="targetgap" tabindex="-1"><a class="header-anchor" href="#targetgap"><span>targetGap</span></a></h3><ul><li><p>类型：<code>Number</code></p></li><li><p>默认值：<code>15(px)</code></p></li><li><p>说明：设置弹窗与目标元素之间的间距，当 <code>placement</code> 选项的值为 <strong>outside</strong> 时会很有用。</p></li></ul><h3 id="boundrygap" tabindex="-1"><a class="header-anchor" href="#boundrygap"><span>boundryGap</span></a></h3><ul><li><p>类型：<code>Number</code></p></li><li><p>默认值：<code>5(px)</code></p></li><li><p>说明：设置弹窗在要溢出容器边界时的安全间距。</p></li></ul><h3 id="offset" tabindex="-1"><a class="header-anchor" href="#offset"><span>offset</span></a></h3><ul><li><p>类型：<code>Array</code></p></li><li><p>默认值：<code>[0, 0]</code></p></li><li><p>说明：设置弹窗在目标元素上的偏移量，取值方式为：<code>[x,y]</code>，<code>x</code> 代表水平位置的偏移量，<code>y</code> 代表垂直位置的偏移量。</p></li></ul><h3 id="needarrow" tabindex="-1"><a class="header-anchor" href="#needarrow"><span>needArrow</span></a></h3><ul><li><p>类型：<code>Boolean</code></p></li><li><p>默认值：<code>true</code></p></li><li><p>说明：设置弹窗是否需要箭头，当 <code>placement</code> 选项的值为 <strong>inside</strong> 时，此选项的值会变成 <code>false</code>。</p></li></ul><h3 id="selfclick" tabindex="-1"><a class="header-anchor" href="#selfclick"><span>selfClick</span></a></h3><ul><li><p>类型：<code>Boolean</code></p></li><li><p>默认值：<code>true</code></p></li><li><p>说明：设置弹窗是否可以点击自身，当此选项被设置为 <code>false</code> 时，点击弹窗自身弹窗将会关闭。</p></li></ul><h3 id="closebyoutside" tabindex="-1"><a class="header-anchor" href="#closebyoutside"><span>closeByOutSide</span></a></h3><ul><li><p>类型：<code>Boolean</code></p></li><li><p>默认值：<code>true</code></p></li><li><p>说明：设置弹窗是否在点击自身以外的区域时关闭，当此选项被设置为 <code>false</code> 时，点击外部区域不会关闭弹窗。</p></li></ul><h3 id="singleopen" tabindex="-1"><a class="header-anchor" href="#singleopen"><span>singleOpen</span></a></h3><ul><li><p>类型：<code>Boolean</code></p></li><li><p>默认值：<code>true</code></p></li><li><p>说明：设置弹窗是否只能同时打开一个，当此选项被设置为 <code>false</code> 时，可以同时打开多个弹窗。</p></li></ul><h3 id="fullscreen" tabindex="-1"><a class="header-anchor" href="#fullscreen"><span>fullScreen</span></a></h3><ul><li><p>类型：<code>Boolean</code></p></li><li><p>默认值：<code>false</code></p></li><li><p>说明：设置弹窗的 <code>layer</code> 层是否全屏显示，当此选项被设置为 <code>true</code> 时，<code>layer</code> 层将会占满整个屏幕，此选项在 调用 <code>showModal</code> 方法时会很有用。</p></li></ul><h3 id="onshow" tabindex="-1"><a class="header-anchor" href="#onshow"><span>onShow</span></a></h3><ul><li><p>类型：<code>Function</code></p></li><li><p>默认值：<code>null</code></p></li><li><p>说明：弹窗显示时的回调函数，此回调函数会在弹窗显示后执行。</p></li></ul><h3 id="onhide" tabindex="-1"><a class="header-anchor" href="#onhide"><span>onHide</span></a></h3><ul><li><p>类型：<code>Function</code></p></li><li><p>默认值：<code>null</code></p></li><li><p>说明：弹窗隐藏时的回调函数，此回调函数会在弹窗隐藏后执行。</p></li></ul><h3 id="ondestroy" tabindex="-1"><a class="header-anchor" href="#ondestroy"><span>onDestroy</span></a></h3><ul><li><p>类型：<code>Function</code></p></li><li><p>默认值：<code>null</code></p></li><li><p>说明：弹窗销毁时的回调函数，此回调函数会在弹窗销毁后执行。</p></li></ul>',42);function y(w,S){const t=l("ExternalLinkIcon"),s=l("CodeGroupItem"),i=l("CodeGroup"),d=l("example");return r(),h("div",null,[g,e("p",null,[n("这是一个简单、方便、有用的 JavaScript 弹窗插件，插件基于 "),e("a",f,[n("floating-ui"),o(t)]),n(" 制作，在 floating-ui 提供的函数的基础上进行了改造封装，进一步开发了功能相对完善的弹窗插件。")]),m,o(i,{copy:"true"},{default:a(()=>[o(s,{title:"npm",active:""},{default:a(()=>[k]),_:1}),o(s,{title:"yarn"},{default:a(()=>[b]),_:1}),o(s,{title:"pnpm"},{default:a(()=>[v]),_:1})]),_:1}),x,o(d),_])}const C=p(u,[["render",y],["__file","index.html.vue"]]),B=JSON.parse('{"path":"/","title":"介绍","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"npm","slug":"npm","link":"#npm","children":[]},{"level":3,"title":"cdn","slug":"cdn","link":"#cdn","children":[]},{"level":3,"title":"创建实例","slug":"创建实例","link":"#创建实例","children":[]},{"level":3,"title":"示例演示","slug":"示例演示","link":"#示例演示","children":[]},{"level":3,"title":"target","slug":"target","link":"#target","children":[]},{"level":3,"title":"popup","slug":"popup","link":"#popup","children":[]},{"level":3,"title":"container","slug":"container","link":"#container","children":[]},{"level":3,"title":"direction","slug":"direction","link":"#direction","children":[]},{"level":3,"title":"placement","slug":"placement","link":"#placement","children":[]},{"level":3,"title":"width","slug":"width","link":"#width","children":[]},{"level":3,"title":"content","slug":"content","link":"#content","children":[]},{"level":3,"title":"theme","slug":"theme","link":"#theme","children":[]},{"level":3,"title":"targetGap","slug":"targetgap","link":"#targetgap","children":[]},{"level":3,"title":"boundryGap","slug":"boundrygap","link":"#boundrygap","children":[]},{"level":3,"title":"offset","slug":"offset","link":"#offset","children":[]},{"level":3,"title":"needArrow","slug":"needarrow","link":"#needarrow","children":[]},{"level":3,"title":"selfClick","slug":"selfclick","link":"#selfclick","children":[]},{"level":3,"title":"closeByOutSide","slug":"closebyoutside","link":"#closebyoutside","children":[]},{"level":3,"title":"singleOpen","slug":"singleopen","link":"#singleopen","children":[]},{"level":3,"title":"fullScreen","slug":"fullscreen","link":"#fullscreen","children":[]},{"level":3,"title":"onShow","slug":"onshow","link":"#onshow","children":[]},{"level":3,"title":"onHide","slug":"onhide","link":"#onhide","children":[]},{"level":3,"title":"onDestroy","slug":"ondestroy","link":"#ondestroy","children":[]}],"git":{"updatedTime":1711102645000,"contributors":[{"name":"wzCoding","email":"1429354968@qq.com","commits":1}]},"filePathRelative":"README.md"}');export{C as comp,B as data};
